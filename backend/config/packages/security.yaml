security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login_check$
            stateless: true
            provider: app_user_provider
            json_login:
                check_path: /api/login_check
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~

    access_control:
        - { path: ^/api/login_check$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/artist, roles: ROLE_ARTIST }
        - { path: ^/api/venue, roles: ROLE_VENUE }
        - { path: ^/api/fan, roles: ROLE_FAN }
        - { path: ^/api/user/profile, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/admin, roles: ROLE_ADMIN }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
